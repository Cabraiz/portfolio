name: Build and Deploy to GitHub Pages

on:
  push:
    branches: [produção]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: github-pages

    steps:
      - name: 🔍 Checkout
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧱 Normalize folder names to lowercase (recursively)
        run: |
          find ./src -type d | tac | while read dir; do
            parent=$(dirname "$dir")
            base=$(basename "$dir")
            lower=$(echo "$base" | tr '[:upper:]' '[:lower:]')
            if [ "$base" != "$lower" ]; then
              target="$parent/$lower"
              echo "📁 Renomeando pasta '$dir' → '$target'"
              git mv "$dir" "$target" 2>/dev/null || mv "$dir" "$target"
            fi
          done

      - name: 🔧 Normalize filenames to lowercase (images, fonts, code, and CSS)
        run: |
          for ext in svg png webp jpg jpeg gif ico otf ttf woff woff2 ts tsx css; do
            find ./src -type f -iname "*.${ext}" | while read filepath; do
              dirname=$(dirname "$filepath")
              filename=$(basename "$filepath")
              lowercase="$dirname/$(echo "$filename" | tr '[:upper:]' '[:lower:]')"
              if [ "$filepath" != "$lowercase" ]; then
                echo "📝 Renomeando '$filepath' para '$lowercase'"
                git mv "$filepath" "$lowercase" 2>/dev/null || mv "$filepath" "$lowercase"
              fi
            done
          done

      - name: 🛠️ Fix imports to match lowercase file paths (including .css)
        run: |
          for ext in svg png webp jpg jpeg gif ico otf ttf woff woff2 ts tsx css; do
            find ./src -type f \( -name "*.ts" -o -name "*.tsx" \) | while read file; do
              grep -iE "['\"].*\.${ext}['\"]" "$file" | while read line; do
                old=$(echo "$line" | sed -nE "s/.*['\"](.*\.${ext})['\"].*/\1/p")
                if [ -n "$old" ]; then
                  corrected=$(echo "$old" | sed -E 's@([^/]+)@\L\1@g')
                  if [ "$old" != "$corrected" ]; then
                    echo "📝 Corrigindo import em $file: $old → $corrected"
                    sed -i "s|$old|$corrected|g" "$file"
                  fi
                fi
              done
            done
          done

      - name: 🛠️ Fix imports to match lowercase folder paths
        run: |
          find ./src -type f \( -name "*.ts" -o -name "*.tsx" \) | while read file; do
            grep -oE "from\s+['\"][^'\"]+['\"]" "$file" | sed -E "s/from\s+['\"](.*)['\"]/\\1/" | while read path; do
              corrected=$(echo "$path" | sed -E 's@/([^/]+)@/\L\1@g')
              if [ "$path" != "$corrected" ]; then
                echo "📂 Corrigindo import em $file: $path → $corrected"
                sed -i "s|['\"]$path['\"]|\"$corrected\"|g" "$file"
              fi
            done
          done

      - name: 🩹 Patch react-toastify CSS for Vite compatibility
        run: |
          CSS_SOURCE=node_modules/react-toastify/dist/ReactToastify.css
          CSS_TARGET=src/react-toastify.css
          if [ -f "$CSS_SOURCE" ]; then
            echo "✅ react-toastify CSS encontrado. Copiando para $CSS_TARGET"
            cp "$CSS_SOURCE" "$CSS_TARGET"
          else
            echo "⚠️ react-toastify CSS não encontrado. Build pode falhar."
          fi

      - name: 🛠️ Build app
        run: npm run build:ci

      - name: 📤 Upload static site to artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    name: 🚀 Deploy to GitHub Pages

    steps:
      - name: 🚀 Deploy with GitHub Pages
        uses: actions/deploy-pages@v4
